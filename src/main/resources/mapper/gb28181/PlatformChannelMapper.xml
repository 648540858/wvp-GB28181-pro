<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.genersoft.iot.vmp.gb28181.dao.PlatformChannelMapper">

    <insert id="addChannels">
        INSERT INTO wvp_platform_channel (platform_id, device_channel_id) VALUES
        <foreach collection='channelList' item='item' separator=','>
            (#{platformId}, #{item.gbId})
        </foreach>
    </insert>

    <delete id="delChannelForDeviceId">
        DELETE
        from wvp_platform_channel
        WHERE device_channel_id in
              (select temp.device_channel_id
               from (select pgc.device_channel_id
                     from wvp_platform_channel pgc
                              left join wvp_device_channel dc on dc.id = pgc.device_channel_id
                     where dc.channel_type = 0
                       and dc.device_id = #{deviceId}) temp)
    </delete>

    <select id="queryDeviceByPlatformIdAndChannelId" resultType="com.genersoft.iot.vmp.gb28181.bean.Device">
        select d.*
        from wvp_platform_channel pgc
                 left join wvp_device_channel dc on dc.id = pgc.device_channel_id
                 left join wvp_device d on dc.device_id = d.device_id
        where dc.channel_type = 0
          and dc.channel_id = #{channelId}
          and pgc.platform_id = #{platformId}
    </select>

    <select id="queryPlatFormListForGBWithGBId" resultType="com.genersoft.iot.vmp.gb28181.bean.Platform">
        SELECT wp.* FROM wvp_platform wp
        left join wvp_platform_channel wpgc on
        wp.id = wpgc.platform_id WHERE
        wpgc.device_channel_id = #{channelId} and wp.status = true
        AND wp.server_gb_id in
        <foreach collection='platforms' item='item' open='(' separator=',' close=')'>#{item}</foreach>
    </select>

    <select id="queryDeviceInfoByPlatformIdAndChannelId" resultType="com.genersoft.iot.vmp.gb28181.bean.Device">
        select dc.channel_id, dc.device_id, dc.name, d.manufacturer, d.model, d.firmware
        from wvp_platform_channel pgc
                 left join wvp_device_channel dc on dc.id = pgc.device_channel_id
                 left join wvp_device d on dc.device_id = d.device_id
        where dc.channel_type = 0
          and dc.channel_id = #{channelId}
          and pgc.platform_id = #{platformId}
    </select>

    <select id="queryParentPlatformByChannelId" resultType="com.genersoft.iot.vmp.gb28181.bean.Platform">
        SELECT pgc.*
        from wvp_platform_channel pgc
                 left join wvp_device_channel dc on dc.id = pgc.device_channel_id
        WHERE dc.channel_type = 0
          and dc.device_id = #{channelId}
    </select>

    <select id="queryForPlatformForWebList" resultType="com.genersoft.iot.vmp.gb28181.bean.PlatformChannel">
        select
        wpgc.id ,
        wdc.id as gb_id,
        wdc.data_type ,
        wdc.data_device_id,
        wdc.create_time,
        wdc.update_time,
        wpgc.custom_device_id,
        wpgc.custom_name,
        wpgc.custom_manufacturer,
        wpgc.custom_model,
        wpgc.custom_owner,
        wpgc.custom_civil_code,
        wpgc.custom_block,
        wpgc.custom_address,
        wpgc.custom_parental,
        wpgc.custom_parent_id,
        wpgc.custom_safety_way,
        wpgc.custom_register_way,
        wpgc.custom_cert_num,
        wpgc.custom_certifiable,
        wpgc.custom_err_code,
        wpgc.custom_end_time,
        wpgc.custom_secrecy,
        wpgc.custom_ip_address,
        wpgc.custom_port,
        wpgc.custom_password,
        wpgc.custom_status,
        wpgc.custom_longitude,
        wpgc.custom_latitude,
        wpgc.custom_ptz_type,
        wpgc.custom_position_type,
        wpgc.custom_room_type,
        wpgc.custom_use_type,
        wpgc.custom_supply_light_type,
        wpgc.custom_direction_type,
        wpgc.custom_resolution,
        wpgc.custom_business_group_id,
        wpgc.custom_download_speed,
        wpgc.custom_svc_space_support_mod,
        wpgc.custom_svc_time_support_mode,
        coalesce( wdc.gb_device_id, wdc.device_id) as gb_device_id,
        coalesce( wdc.gb_name, wdc.name) as gb_name,
        coalesce( wdc.gb_manufacturer, wdc.manufacturer) as gb_manufacturer,
        coalesce( wdc.gb_model, wdc.model) as gb_model,
        coalesce( wdc.gb_owner, wdc.owner) as gb_owner,
        coalesce( wdc.gb_civil_code, wdc.civil_code) as gb_civil_code,
        coalesce( wdc.gb_block, wdc.block) as gb_block,
        coalesce( wdc.gb_address, wdc.address) as gb_address,
        coalesce( wdc.gb_parental, wdc.parental) as gb_parental,
        coalesce( wdc.gb_parent_id, wdc.parent_id) as gb_parent_id,
        coalesce( wdc.gb_safety_way, wdc.safety_way) as gb_safety_way,
        coalesce( wdc.gb_register_way, wdc.register_way) as gb_register_way,
        coalesce( wdc.gb_cert_num, wdc.cert_num) as gb_cert_num,
        coalesce( wdc.gb_certifiable, wdc.certifiable) as gb_certifiable,
        coalesce( wdc.gb_err_code, wdc.err_code) as gb_err_code,
        coalesce( wdc.gb_end_time, wdc.end_time) as gb_end_time,
        coalesce( wdc.gb_secrecy, wdc.secrecy) as gb_secrecy,
        coalesce( wdc.gb_ip_address, wdc.ip_address) as gb_ip_address,
        coalesce( wdc.gb_port, wdc.port) as gb_port,
        coalesce( wdc.gb_password, wdc.password) as gb_password,
        coalesce( wdc.gb_status, wdc.status) as gb_status,
        coalesce( wdc.gb_longitude, wdc.longitude) as gb_longitude,
        coalesce( wdc.gb_latitude, wdc.latitude) as gb_latitude,
        coalesce( wdc.gb_ptz_type, wdc.ptz_type) as gb_ptz_type,
        coalesce( wdc.gb_position_type, wdc.position_type) as gb_position_type,
        coalesce( wdc.gb_room_type, wdc.room_type) as gb_room_type,
        coalesce( wdc.gb_use_type, wdc.use_type) as gb_use_type,
        coalesce( wdc.gb_supply_light_type, wdc.supply_light_type) as gb_supply_light_type,
        coalesce( wdc.gb_direction_type, wdc.direction_type) as gb_direction_type,
        coalesce( wdc.gb_resolution, wdc.resolution) as gb_resolution,
        coalesce( wdc.gb_business_group_id, wdc.business_group_id) as gb_business_group_id,
        coalesce( wdc.gb_download_speed, wdc.download_speed) as gb_download_speed,
        coalesce( wdc.gb_svc_space_support_mod, wdc.svc_space_support_mod) as gb_svc_space_support_mod,
        coalesce( wdc.gb_svc_time_support_mode, wdc.svc_time_support_mode) as gb_svc_time_support_mode,
        wpgc.platform_id
        from wvp_device_channel wdc
        left join wvp_platform_channel wpgc on wdc.id = wpgc.device_channel_id and wpgc.platform_id = #{platformId}
        where wdc.channel_type = 0
        <if test='query != null'>
            AND (coalesce(wdc.gb_device_id, wdc.device_id) LIKE concat('%',#{query},'%')
            OR wpgc.custom_device_id LIKE concat('%',#{query},'%')
            OR coalesce(wdc.gb_name, wdc.name) LIKE concat('%',#{query},'%')
            OR wpgc.custom_name LIKE concat('%',#{query},'%'))
        </if>
        <if test='online == true'>AND coalesce(wpgc.status, wdc.gb_status, wdc.status) = 'ON'</if>
        <if test='online == false'>AND coalesce(wpgc.status, wdc.gb_status, wdc.status) = 'OFF'</if>
        <if test='hasShare == true'>AND wpgc.platform_id = #{platformId}</if>
        <if test='hasShare == false'>AND wpgc.platform_id is null</if>
        <if test='dataType != null'>AND wdc.data_type = #{dataType}</if>
    </select>

    <select id="queryOneWithPlatform" resultType="com.genersoft.iot.vmp.gb28181.bean.CommonGBChannel">
        select wdc.id                                                              as gb_id,
               wdc.data_type,
               wdc.data_device_id,
               wdc.create_time,
               wdc.update_time,
               coalesce(wpgc.custom_device_id, wdc.gb_device_id, wdc.device_id)    as gb_device_id,
               coalesce(wpgc.custom_name, wdc.gb_name, wdc.name)                   as gb_name,
               coalesce(wpgc.custom_manufacturer, wdc.gb_manufacturer,
                        wdc.manufacturer)                                          as gb_manufacturer,
               coalesce(wpgc.custom_model, wdc.gb_model, wdc.model)                as gb_model,
               coalesce(wpgc.custom_owner, wdc.gb_owner, wdc.owner)                as gb_owner,
               coalesce(wpgc.custom_civil_code, wdc.gb_civil_code, wdc.civil_code) as gb_civil_code,
               coalesce(wpgc.custom_block, wdc.gb_block, wdc.block)                as gb_block,
               coalesce(wpgc.custom_address, wdc.gb_address, wdc.address)          as gb_address,
               coalesce(wpgc.custom_parental, wdc.gb_parental, wdc.parental)       as gb_parental,
               coalesce(wpgc.custom_parent_id, wdc.gb_parent_id, wdc.parent_id)    as gb_parent_id,
               coalesce(wpgc.custom_safety_way, wdc.gb_safety_way, wdc.safety_way) as gb_safety_way,
               coalesce(wpgc.custom_register_way, wdc.gb_register_way,
                        wdc.register_way)                                          as gb_register_way,
               coalesce(wpgc.custom_cert_num, wdc.gb_cert_num, wdc.cert_num)       as gb_cert_num,
               coalesce(wpgc.custom_certifiable, wdc.gb_certifiable,
                        wdc.certifiable)                                           as gb_certifiable,
               coalesce(wpgc.custom_err_code, wdc.gb_err_code, wdc.err_code)       as gb_err_code,
               coalesce(wpgc.custom_end_time, wdc.gb_end_time, wdc.end_time)       as gb_end_time,
               coalesce(wpgc.custom_secrecy, wdc.gb_secrecy, wdc.secrecy)          as gb_secrecy,
               coalesce(wpgc.custom_ip_address, wdc.gb_ip_address, wdc.ip_address) as gb_ip_address,
               coalesce(wpgc.custom_port, wdc.gb_port, wdc.port)                   as gb_port,
               coalesce(wpgc.custom_password, wdc.gb_password, wdc.password)       as gb_password,
               coalesce(wpgc.custom_status, wdc.gb_status, wdc.status)             as gb_status,
               coalesce(wpgc.custom_longitude, wdc.gb_longitude, wdc.longitude)    as gb_longitude,
               coalesce(wpgc.custom_latitude, wdc.gb_latitude, wdc.latitude)       as gb_latitude,
               coalesce(wpgc.custom_ptz_type, wdc.gb_ptz_type, wdc.ptz_type)       as gb_ptz_type,
               coalesce(wpgc.custom_position_type, wdc.gb_position_type,
                        wdc.position_type)                                         as gb_position_type,
               coalesce(wpgc.custom_room_type, wdc.gb_room_type, wdc.room_type)    as gb_room_type,
               coalesce(wpgc.custom_use_type, wdc.gb_use_type, wdc.use_type)       as gb_use_type,
               coalesce(wpgc.custom_supply_light_type, wdc.gb_supply_light_type,
                        wdc.supply_light_type)                                     as gb_supply_light_type,
               coalesce(wpgc.custom_direction_type, wdc.gb_direction_type,
                        wdc.direction_type)                                        as gb_direction_type,
               coalesce(wpgc.custom_resolution, wdc.gb_resolution, wdc.resolution) as gb_resolution,
               coalesce(wpgc.custom_business_group_id, wdc.gb_business_group_id,
                        wdc.business_group_id)                                     as gb_business_group_id,
               coalesce(wpgc.custom_download_speed, wdc.gb_download_speed,
                        wdc.download_speed)                                        as gb_download_speed,
               coalesce(wpgc.custom_svc_space_support_mod, wdc.gb_svc_space_support_mod,
                        wdc.svc_space_support_mod)                                 as gb_svc_space_support_mod,
               coalesce(wpgc.custom_svc_time_support_mode, wdc.gb_svc_time_support_mode,
                        wdc.svc_time_support_mode)                                 as gb_svc_time_support_mode
        from wvp_device_channel wdc
                 left join wvp_platform_channel wpgc on wdc.id = wpgc.device_channel_id
        where wdc.channel_type = 0
          and wpgc.platform_id = #{platformId}
          and coalesce(wpgc.custom_device_id, wdc.gb_device_id, wdc.device_id) = #{channelDeviceId}
        order by wdc.id
    </select>

    <select id="queryNotShare" resultType="com.genersoft.iot.vmp.gb28181.bean.CommonGBChannel">
        select
        wdc.id as gb_id,
        wdc.data_type,
        wdc.data_device_id,
        wdc.create_time,
        wdc.update_time,
        coalesce(wpgc.custom_device_id, wdc.gb_device_id, wdc.device_id) as gb_device_id,
        coalesce(wpgc.custom_name, wdc.gb_name, wdc.name) as gb_name,
        coalesce(wpgc.custom_manufacturer, wdc.gb_manufacturer, wdc.manufacturer) as gb_manufacturer,
        coalesce(wpgc.custom_model, wdc.gb_model, wdc.model) as gb_model,
        coalesce(wpgc.custom_owner, wdc.gb_owner, wdc.owner) as gb_owner,
        coalesce(wpgc.custom_civil_code, wdc.gb_civil_code, wdc.civil_code) as gb_civil_code,
        coalesce(wpgc.custom_block, wdc.gb_block, wdc.block) as gb_block,
        coalesce(wpgc.custom_address, wdc.gb_address, wdc.address) as gb_address,
        coalesce(wpgc.custom_parental, wdc.gb_parental, wdc.parental) as gb_parental,
        coalesce(wpgc.custom_parent_id, wdc.gb_parent_id, wdc.parent_id) as gb_parent_id,
        coalesce(wpgc.custom_safety_way, wdc.gb_safety_way, wdc.safety_way) as gb_safety_way,
        coalesce(wpgc.custom_register_way, wdc.gb_register_way, wdc.register_way) as gb_register_way,
        coalesce(wpgc.custom_cert_num, wdc.gb_cert_num, wdc.cert_num) as gb_cert_num,
        coalesce(wpgc.custom_certifiable, wdc.gb_certifiable, wdc.certifiable) as gb_certifiable,
        coalesce(wpgc.custom_err_code, wdc.gb_err_code, wdc.err_code) as gb_err_code,
        coalesce(wpgc.custom_end_time, wdc.gb_end_time, wdc.end_time) as gb_end_time,
        coalesce(wpgc.custom_secrecy, wdc.gb_secrecy, wdc.secrecy) as gb_secrecy,
        coalesce(wpgc.custom_ip_address, wdc.gb_ip_address, wdc.ip_address) as gb_ip_address,
        coalesce(wpgc.custom_port, wdc.gb_port, wdc.port) as gb_port,
        coalesce(wpgc.custom_password, wdc.gb_password, wdc.password) as gb_password,
        coalesce(wpgc.custom_status, wdc.gb_status, wdc.status) as gb_status,
        coalesce(wpgc.custom_longitude, wdc.gb_longitude, wdc.longitude) as gb_longitude,
        coalesce(wpgc.custom_latitude, wdc.gb_latitude, wdc.latitude) as gb_latitude,
        coalesce(wpgc.custom_ptz_type, wdc.gb_ptz_type, wdc.ptz_type) as gb_ptz_type,
        coalesce(wpgc.custom_position_type, wdc.gb_position_type, wdc.position_type) as gb_position_type,
        coalesce(wpgc.custom_room_type, wdc.gb_room_type, wdc.room_type) as gb_room_type,
        coalesce(wpgc.custom_use_type, wdc.gb_use_type, wdc.use_type) as gb_use_type,
        coalesce(wpgc.custom_supply_light_type, wdc.gb_supply_light_type, wdc.supply_light_type) as
        gb_supply_light_type,
        coalesce(wpgc.custom_direction_type, wdc.gb_direction_type, wdc.direction_type) as gb_direction_type,
        coalesce(wpgc.custom_resolution, wdc.gb_resolution, wdc.resolution) as gb_resolution,
        coalesce(wpgc.custom_business_group_id, wdc.gb_business_group_id, wdc.business_group_id) as
        gb_business_group_id,
        coalesce(wpgc.custom_download_speed, wdc.gb_download_speed, wdc.download_speed) as gb_download_speed,
        coalesce(wpgc.custom_svc_space_support_mod, wdc.gb_svc_space_support_mod, wdc.svc_space_support_mod) as
        gb_svc_space_support_mod,
        coalesce(wpgc.custom_svc_time_support_mode, wdc.gb_svc_time_support_mode, wdc.svc_time_support_mode) as
        gb_svc_time_support_mode
        from wvp_device_channel wdc
        left join wvp_platform_channel wpgc on wdc.id = wpgc.device_channel_id and wpgc.platform_id = #{platformId}
        where wdc.channel_type = 0 and wpgc.platform_id is null
        <if test='channelIds != null'>
            AND wdc.id in
            <foreach item='item' index='index' collection='channelIds' open='(' separator=',' close=')'>#{item}
            </foreach>
        </if>
    </select>

    <select id="queryShare" resultType="com.genersoft.iot.vmp.gb28181.bean.CommonGBChannel">
        select
        wdc.id as gb_id,
        wdc.data_type,
        wdc.data_device_id,
        wdc.create_time,
        wdc.update_time,
        coalesce(wpgc.custom_device_id, wdc.gb_device_id, wdc.device_id) as gb_device_id,
        coalesce(wpgc.custom_name, wdc.gb_name, wdc.name) as gb_name,
        coalesce(wpgc.custom_manufacturer, wdc.gb_manufacturer, wdc.manufacturer) as gb_manufacturer,
        coalesce(wpgc.custom_model, wdc.gb_model, wdc.model) as gb_model,
        coalesce(wpgc.custom_owner, wdc.gb_owner, wdc.owner) as gb_owner,
        coalesce(wpgc.custom_civil_code, wdc.gb_civil_code, wdc.civil_code) as gb_civil_code,
        coalesce(wpgc.custom_block, wdc.gb_block, wdc.block) as gb_block,
        coalesce(wpgc.custom_address, wdc.gb_address, wdc.address) as gb_address,
        coalesce(wpgc.custom_parental, wdc.gb_parental, wdc.parental) as gb_parental,
        coalesce(wpgc.custom_parent_id, wdc.gb_parent_id, wdc.parent_id) as gb_parent_id,
        coalesce(wpgc.custom_safety_way, wdc.gb_safety_way, wdc.safety_way) as gb_safety_way,
        coalesce(wpgc.custom_register_way, wdc.gb_register_way, wdc.register_way) as gb_register_way,
        coalesce(wpgc.custom_cert_num, wdc.gb_cert_num, wdc.cert_num) as gb_cert_num,
        coalesce(wpgc.custom_certifiable, wdc.gb_certifiable, wdc.certifiable) as gb_certifiable,
        coalesce(wpgc.custom_err_code, wdc.gb_err_code, wdc.err_code) as gb_err_code,
        coalesce(wpgc.custom_end_time, wdc.gb_end_time, wdc.end_time) as gb_end_time,
        coalesce(wpgc.custom_secrecy, wdc.gb_secrecy, wdc.secrecy) as gb_secrecy,
        coalesce(wpgc.custom_ip_address, wdc.gb_ip_address, wdc.ip_address) as gb_ip_address,
        coalesce(wpgc.custom_port, wdc.gb_port, wdc.port) as gb_port,
        coalesce(wpgc.custom_password, wdc.gb_password, wdc.password) as gb_password,
        coalesce(wpgc.custom_status, wdc.gb_status, wdc.status) as gb_status,
        coalesce(wpgc.custom_longitude, wdc.gb_longitude, wdc.longitude) as gb_longitude,
        coalesce(wpgc.custom_latitude, wdc.gb_latitude, wdc.latitude) as gb_latitude,
        coalesce(wpgc.custom_ptz_type, wdc.gb_ptz_type, wdc.ptz_type) as gb_ptz_type,
        coalesce(wpgc.custom_position_type, wdc.gb_position_type, wdc.position_type) as gb_position_type,
        coalesce(wpgc.custom_room_type, wdc.gb_room_type, wdc.room_type) as gb_room_type,
        coalesce(wpgc.custom_use_type, wdc.gb_use_type, wdc.use_type) as gb_use_type,
        coalesce(wpgc.custom_supply_light_type, wdc.gb_supply_light_type, wdc.supply_light_type) as
        gb_supply_light_type,
        coalesce(wpgc.custom_direction_type, wdc.gb_direction_type, wdc.direction_type) as gb_direction_type,
        coalesce(wpgc.custom_resolution, wdc.gb_resolution, wdc.resolution) as gb_resolution,
        coalesce(wpgc.custom_business_group_id, wdc.gb_business_group_id, wdc.business_group_id) as
        gb_business_group_id,
        coalesce(wpgc.custom_download_speed, wdc.gb_download_speed, wdc.download_speed) as gb_download_speed,
        coalesce(wpgc.custom_svc_space_support_mod, wdc.gb_svc_space_support_mod, wdc.svc_space_support_mod) as
        gb_svc_space_support_mod,
        coalesce(wpgc.custom_svc_time_support_mode, wdc.gb_svc_time_support_mode, wdc.svc_time_support_mode) as
        gb_svc_time_support_mode
        from wvp_device_channel wdc
        left join wvp_platform_channel wpgc on wdc.id = wpgc.device_channel_id
        where wdc.channel_type = 0 and wpgc.platform_id = #{platformId}
        <if test='channelIds != null'>AND wdc.id in
            <foreach item='item' index='index' collection='channelIds' open='(' separator=',' close=')'>
                #{item}
            </foreach>
        </if>
        order by wdc.id
    </select>

    <delete id="removeChannelsWithPlatform">
        DELETE from wvp_platform_channel WHERE platform_id=#{platformId}
        <if test='channelList != null'>AND device_channel_id in
            <foreach item='item' index='index' collection='channelList' open='(' separator=',' close=')'>
                #{item.gbId}
            </foreach>
        </if>
    </delete>

    <delete id="removeChannels">
        DELETE from wvp_platform_channel WHERE
        <if test='channelList != null'>AND device_channel_id in
            <foreach item='item' index='index' collection='channelList' open='(' separator=',' close=')'>
                #{item.gbId}
            </foreach>
        </if>
    </delete>

    <insert id="addPlatformGroup">
        INSERT INTO wvp_platform_group (platform_id, group_id) VALUES
        <foreach collection='groupListNotShare' item='item' separator=','>
            (#{platformId}, #{item.id})
        </foreach>
    </insert>

    <insert id="addPlatformRegion">
        INSERT INTO wvp_platform_region (platform_id, region_id) VALUES
        <foreach collection='regionListNotShare' item='item' separator=','>
            (#{platformId}, #{item.id})
        </foreach>
    </insert>

    <delete id="removePlatformGroup">
        DELETE from wvp_platform_group WHERE platform_id=#{platformId} AND group_id in
        <foreach collection='groupList' item='item' open='(' separator=',' close=')'>#{item.id}</foreach>
    </delete>

    <delete id="removePlatformGroupById">
        DELETE
        from wvp_platform_group
        WHERE platform_id = #{platformId}
          AND group_id = #{id}
    </delete>

    <delete id="removePlatformRegionById">
        DELETE
        from wvp_platform_region
        WHERE platform_id = #{platformId}
          AND region_id = #{id}
    </delete>

    <select id="queryShareChildrenGroup" resultType="com.genersoft.iot.vmp.gb28181.bean.Group">
        SELECT wcg.*
        from wvp_common_group wcg
                 left join wvp_platform_group wpg on wpg.group_id = wcg.id and wpg.platform_id = #{platformId}
        where wpg.platform_id IS NOT NULL
          and wcg.parent_id = #{parentId}
    </select>

    <select id="queryShareChildrenRegion" resultType="com.genersoft.iot.vmp.gb28181.bean.Region">
        SELECT wcr.*
        from wvp_common_region wcr
                 left join wvp_platform_region wpr on wpr.region_id = wcr.id and wpr.platform_id = #{platformId}
        where wpr.platform_id IS NOT NULL
          and wcr.parent_device_id = #{parentId}
    </select>

    <select id="queryShareParentGroupByGroupSet" resultType="com.genersoft.iot.vmp.gb28181.bean.Group">
        SELECT wcg.* from wvp_common_group wcg
        left join wvp_platform_group wpg on wpg.group_id = wcg.id and wpg.platform_id = #{platformId}
        where wpg.platform_id is not null and wcg.id in
        <foreach collection='groupSet' item='item' open='(' separator=',' close=')'>#{item.parentId}</foreach>
    </select>

    <select id="queryShareParentRegionByRegionSet" resultType="com.genersoft.iot.vmp.gb28181.bean.Region">
        SELECT wcr.* from wvp_common_region wcr
        left join wvp_platform_region wpr on wpr.region_id = wcr.id and wpr.platform_id = #{platformId}
        where wpr.platform_id is not null and wcr.id in
        <foreach collection='regionSet' item='item' open='(' separator=',' close=')'>#{item.parentId}</foreach>
    </select>

    <select id="queryPlatFormListByChannelList" resultType="com.genersoft.iot.vmp.gb28181.bean.Platform">
        SELECT pp.* FROM wvp_platform pp
        left join wvp_platform_channel pgc on pp.id = pgc.platform_id
        left join wvp_device_channel dc on dc.id = pgc.device_channel_id
        WHERE pgc.device_channel_id IN
        <foreach collection='ids' item='item' open='(' separator=',' close=')'>#{item}</foreach>
    </select>

    <select id="queryPlatFormListByChannelId" resultType="com.genersoft.iot.vmp.gb28181.bean.Platform">
        SELECT pp.*
        FROM wvp_platform pp
                 left join wvp_platform_channel pgc on pp.id = pgc.platform_id
                 left join wvp_device_channel dc on dc.id = pgc.device_channel_id
        WHERE pgc.device_channel_id = #{channelId}
    </select>

    <delete id="removeChannelsByPlatformId">
        DELETE
        from wvp_platform_channel
        WHERE platform_id = #{platformId}
    </delete>

    <delete id="removePlatformGroupsByPlatformId">
        DELETE
        from wvp_platform_group
        WHERE platform_id = #{platformId}
    </delete>

    <delete id="removePlatformRegionByPlatformId">
        DELETE
        from wvp_platform_region
        WHERE platform_id = #{platformId}
    </delete>

    <update id="updateCustomChannel">
        UPDATE wvp_platform_channel
        SET custom_device_id             =#{customDeviceId},
            custom_name                  =#{customName},
            custom_manufacturer          =#{customManufacturer},
            custom_model                 =#{customModel},
            custom_owner                 =#{customOwner},
            custom_civil_code            =#{customCivilCode},
            custom_block                 =#{customBlock},
            custom_address               =#{customAddress},
            custom_parental              =#{customParental},
            custom_parent_id             =#{customParentId},
            custom_safety_way            =#{customSafetyWay},
            custom_register_way          =#{customRegisterWay},
            custom_cert_num              =#{customCertNum},
            custom_certifiable           =#{customCertifiable},
            custom_err_code              =#{customErrCode},
            custom_end_time              =#{customEndTime},
            custom_secrecy               =#{customSecrecy},
            custom_ip_address            =#{customIpAddress},
            custom_port                  =#{customPort},
            custom_password              =#{customPassword},
            custom_status                =#{customStatus},
            custom_longitude             =#{customLongitude},
            custom_latitude              =#{customLatitude},
            custom_ptz_type              =#{customPtzType},
            custom_position_type         =#{customPositionType},
            custom_room_type             =#{customRoomType},
            custom_use_type              =#{customUseType},
            custom_supply_light_type     =#{customSupplyLightType},
            custom_direction_type        =#{customDirectionType},
            custom_resolution            =#{customResolution},
            custom_business_group_id     =#{customBusinessGroupId},
            custom_download_speed        =#{customDownloadSpeed},
            custom_svc_space_support_mod =#{customSvcSpaceSupportMod},
            custom_svc_time_support_mode = #{customSvcTimeSupportMode}
        WHERE id = #{id}
    </update>

    <select id="queryShareChannel" resultType="com.genersoft.iot.vmp.gb28181.bean.CommonGBChannel">
        select wdc.id                                                              as gb_id,
               wdc.data_type,
               wdc.data_device_id,
               wdc.create_time,
               wdc.update_time,
               coalesce(wpgc.custom_device_id, wdc.gb_device_id, wdc.device_id)    as gb_device_id,
               coalesce(wpgc.custom_name, wdc.gb_name, wdc.name)                   as gb_name,
               coalesce(wpgc.custom_manufacturer, wdc.gb_manufacturer,
                        wdc.manufacturer)                                          as gb_manufacturer,
               coalesce(wpgc.custom_model, wdc.gb_model, wdc.model)                as gb_model,
               coalesce(wpgc.custom_owner, wdc.gb_owner, wdc.owner)                as gb_owner,
               coalesce(wpgc.custom_civil_code, wdc.gb_civil_code, wdc.civil_code) as gb_civil_code,
               coalesce(wpgc.custom_block, wdc.gb_block, wdc.block)                as gb_block,
               coalesce(wpgc.custom_address, wdc.gb_address, wdc.address)          as gb_address,
               coalesce(wpgc.custom_parental, wdc.gb_parental, wdc.parental)       as gb_parental,
               coalesce(wpgc.custom_parent_id, wdc.gb_parent_id, wdc.parent_id)    as gb_parent_id,
               coalesce(wpgc.custom_safety_way, wdc.gb_safety_way, wdc.safety_way) as gb_safety_way,
               coalesce(wpgc.custom_register_way, wdc.gb_register_way,
                        wdc.register_way)                                          as gb_register_way,
               coalesce(wpgc.custom_cert_num, wdc.gb_cert_num, wdc.cert_num)       as gb_cert_num,
               coalesce(wpgc.custom_certifiable, wdc.gb_certifiable,
                        wdc.certifiable)                                           as gb_certifiable,
               coalesce(wpgc.custom_err_code, wdc.gb_err_code, wdc.err_code)       as gb_err_code,
               coalesce(wpgc.custom_end_time, wdc.gb_end_time, wdc.end_time)       as gb_end_time,
               coalesce(wpgc.custom_secrecy, wdc.gb_secrecy, wdc.secrecy)          as gb_secrecy,
               coalesce(wpgc.custom_ip_address, wdc.gb_ip_address, wdc.ip_address) as gb_ip_address,
               coalesce(wpgc.custom_port, wdc.gb_port, wdc.port)                   as gb_port,
               coalesce(wpgc.custom_password, wdc.gb_password, wdc.password)       as gb_password,
               coalesce(wpgc.custom_status, wdc.gb_status, wdc.status)             as gb_status,
               coalesce(wpgc.custom_longitude, wdc.gb_longitude, wdc.longitude)    as gb_longitude,
               coalesce(wpgc.custom_latitude, wdc.gb_latitude, wdc.latitude)       as gb_latitude,
               coalesce(wpgc.custom_ptz_type, wdc.gb_ptz_type, wdc.ptz_type)       as gb_ptz_type,
               coalesce(wpgc.custom_position_type, wdc.gb_position_type,
                        wdc.position_type)                                         as gb_position_type,
               coalesce(wpgc.custom_room_type, wdc.gb_room_type, wdc.room_type)    as gb_room_type,
               coalesce(wpgc.custom_use_type, wdc.gb_use_type, wdc.use_type)       as gb_use_type,
               coalesce(wpgc.custom_supply_light_type, wdc.gb_supply_light_type,
                        wdc.supply_light_type)                                     as gb_supply_light_type,
               coalesce(wpgc.custom_direction_type, wdc.gb_direction_type,
                        wdc.direction_type)                                        as gb_direction_type,
               coalesce(wpgc.custom_resolution, wdc.gb_resolution, wdc.resolution) as gb_resolution,
               coalesce(wpgc.custom_business_group_id, wdc.gb_business_group_id,
                        wdc.business_group_id)                                     as gb_business_group_id,
               coalesce(wpgc.custom_download_speed, wdc.gb_download_speed,
                        wdc.download_speed)                                        as gb_download_speed,
               coalesce(wpgc.custom_svc_space_support_mod, wdc.gb_svc_space_support_mod,
                        wdc.svc_space_support_mod)                                 as gb_svc_space_support_mod,
               coalesce(wpgc.custom_svc_time_support_mode, wdc.gb_svc_time_support_mode,
                        wdc.svc_time_support_mode)                                 as gb_svc_time_support_mode
        from wvp_device_channel wdc
                 left join wvp_platform_channel wpgc on wdc.id = wpgc.device_channel_id
        where wdc.channel_type = 0
          and wpgc.platform_id = #{platformId}
          and wdc.id = #{gbId}
    </select>

    <select id="queryShareGroup" resultType="com.genersoft.iot.vmp.gb28181.bean.Group">
        SELECT wcg.*
        from wvp_common_group wcg
                 left join wvp_platform_group wpg on wpg.group_id = wcg.id
        where wpg.platform_id = #{platformId}
        order by wcg.id DESC
    </select>

    <select id="queryShareRegion" resultType="com.genersoft.iot.vmp.gb28181.bean.Region">
        SELECT wcr.*
        from wvp_common_region wcr
                 left join wvp_platform_region wpr on wpr.region_id = wcr.id
        where wpr.platform_id = #{platformId}
        order by wcr.id DESC
    </select>
</mapper>